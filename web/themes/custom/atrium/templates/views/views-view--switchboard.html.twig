{#
/**
 * @file
 * Template for "Switchboard" view.
 *
 * This View returns a single result, based on `field_parent` set in the node
 * currently being Viewed. Typically, the level of information we're getting at
 * here would be a few levels deep, e.g. views_view_fields. However, the Pattern
 * Lab component requires all data te be passed in one place, so we are using
 * the Node entity from the views result to get data we need.
 */
#}
{% extends 'views-view.html.twig' %}
{% block content %}
  {% if rows %}
    {# Current "SRL HowTo Information" node, which needs to be excluded. #}
    {% set current = rows.0['#rows'].0['#view'].result.0._entity %}
    {# Parent "SRL HowTo" node. #}
    {% set parent = rows.0['#rows'].0['#view'].result.0._relationship_entities.field_parent %}

      {# Primary Switchboard items. #}
      {% if parent.field_children_primary.value %}
        {% set primary_items = [] %}
        {% set primary = parent.fields.field_children_primary %}

        {% for key, item in parent.field_children_primary.value %}
          {# ⇣ This check is important because Card fields are NOT required.
          Empty Cards are possible, and would return the wrong data. #}
          {% if primary.get(key).entity.field_page.value %}
            {% set tile_target = primary.get(key).entity.field_page.entity %}

            {# Exclude the current node from the results. #}
            {% if tile_target.id() != current.id() %}
              {# Store each tile in an array for the Pattern component. #}
              {% set primary_items = primary_items|merge([{
                brow: tile_target.label(),
                title: primary.get(key).entity.field_statement|view,
                url: path('entity.node.canonical', { 'node': tile_target.id() })
              }]) %}
            {% endif %}
          {% endif %}
        {% endfor %}
      {% endif %}

    {# Secondary Switchboard items. #}
    {% if parent.field_children_secondary.value %}
        {% set secondary_items = [] %}
        {% set secondary = parent.field_children_secondary %}

        {% for key, item in parent.field_children_secondary.value %}
          {# ⇣ This check is important because Card fields are NOT required.
          Empty Cards are possible, and would return the wrong data. #}
          {% if secondary.get(key).entity.field_page.value %}
            {% set tile_target = secondary.get(key).entity.field_page.entity %}

            {# Exclude the current node from the results. #}
            {% if tile_target.id() != current.id() %}
              {# Store each tile in an array for the Pattern component. #}
              {% set secondary_items = secondary_items|merge([{
                brow: tile_target.label(),
                title: secondary.get(key).entity.field_statement|view,
                url: path('entity.node.canonical', { 'node': tile_target.id() })
              }]) %}
            {% endif %}
          {% endif %}
        {% endfor %}
      {% endif %}

    {% if parent.field_children_primary.value or parent.field_children_secondary.value %}
      {% include '@organisms/sections/switchboard/switchboard.twig' with {
        switchboard: {
          background_variant: 'has-background-color--dark',
          headergroup: {
            brow: parent.field_switchboard_title|view,
            title: parent.field_switchboard_subtitle|view
          },
          items: {
            primary: primary_items,
            secondary: secondary_items,
          }
        }
      } only %}
    {% endif %}
  {% endif %}
{% endblock %}
